version: '3.5'

services:
  app:
    build: .
    ports:
      - "8000:8000"
    env_file:
      - .env
    depends_on:
      - db
      - broker
    networks:
      - app-network
    command: >
      sh -c "alembic upgrade head && uvicorn app.server:create_app --host 0.0.0.0 --factory"
  
  campaign_worker:
    build: .
    env_file:
      - .env
    depends_on:
      broker:
        condition: service_healthy
    networks:
      - app-network
    command: >
      sh -c "python3 -m app.workers.campaign_worker"

  email_worker:
    build: .
    env_file:
      - .env
    depends_on:
      broker:
        condition: service_healthy
    networks:
      - app-network
    command: >
      sh -c "python3 -m app.workers.email_worker"

  db:
    image: postgres:17.0-alpine3.20
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASS}
    ports:
      - "5432:5432"
    networks:
      - app-network


  broker:
    image: rabbitmq:4.0.5-management-alpine
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBIT_DEFAULT_USER: ${RMQ_USER}
      RABBIT_DEFAULT_PASS: ${RMQ_PASS}
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 5s
      retries: 5
      timeout: 5s
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq
    networks:
      - app-network


  test_db:
    image: postgres:17.0-alpine3.20
    environment:
      POSTGRES_DB: ${TEST_DB_NAME}
      POSTGRES_USER: ${TEST_DB_USER}
      POSTGRES_PASSWORD: ${TEST_DB_PASS}
    ports:
      - "5433:5432"


networks:
  app-network:

volumes:
  rabbitmq-data:
